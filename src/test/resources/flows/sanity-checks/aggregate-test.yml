id: mongodb_aggregate_test
namespace: io.kestra.tests

tasks:
  # First, insert test data
  - id: insert_test_data
    type: io.kestra.plugin.mongodb.InsertMany
    connection:
      uri: "{{ mongo_uri ?? 'mongodb://localhost:27017' }}"
    database: "test_db"
    collection: "test_collection"
    documents:
      - _id: 1
        category: "electronics"
        product: "laptop"
        price: 1200
        quantity: 5
      - _id: 2
        category: "electronics"
        product: "phone"
        price: 800
        quantity: 10
      - _id: 3
        category: "books"
        product: "novel"
        price: 15
        quantity: 100
      - _id: 4
        category: "books"
        product: "textbook"
        price: 50
        quantity: 30
      - _id: 5
        category: "electronics"
        product: "tablet"
        price: 500
        quantity: 8

  # Simple aggregation - group by category
  - id: aggregate_by_category
    type: io.kestra.plugin.mongodb.Aggregate
    connection:
      uri: "{{ mongo_uri ?? 'mongodb://localhost:27017' }}"
    database: "test_db"
    collection: "test_collection"
    pipeline:
      - $group:
          _id: "$category"
          totalRevenue:
            $sum:
              $multiply: ["$price", "$quantity"]
          avgPrice:
            $avg: "$price"
          totalItems:
            $sum: "$quantity"
      - $sort:
          totalRevenue: -1

  # Complex aggregation with projection
  - id: aggregate_with_projection
    type: io.kestra.plugin.mongodb.Aggregate
    connection:
      uri: "{{ mongo_uri ?? 'mongodb://localhost:27017' }}"
    database: "test_db"
    collection: "test_collection"
    pipeline:
      - $project:
          product: 1
          category: 1
          totalValue:
            $multiply: ["$price", "$quantity"]
          inStock:
            $gt: ["$quantity", 0]
      - $match:
          totalValue:
            $gte: 1000
      - $sort:
          totalValue: -1
    store: true

  # Cleanup - delete test data
  - id: cleanup
    type: io.kestra.plugin.mongodb.Delete
    connection:
      uri: "{{ mongo_uri ?? 'mongodb://localhost:27017' }}"
    database: "test_db"
    collection: "test_collection"
    filter: {}